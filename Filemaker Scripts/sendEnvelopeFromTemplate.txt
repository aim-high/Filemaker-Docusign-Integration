# PURPOSE:		Sends Docusign envelope using Docusign Template.
# PARAMETERS:	None
# Dependencies:	Must have valid Docusign Access Token and TemplateID.
# Context: 		N/A
# History:		Created 2019-October-10 by Erica Ching (eching@aimhigh.org)
# Notes:		None

#-------------------------------------------------------------------------------------

Set Error Capture [On]
Allow User Abort [Off]

Set Variable [$token ; Value: DocusignToken ]
Set Variable [$accountID ; Value: {YOUR_ACCOUNTID}]

If [IsEmpty (PositionType) or IsEmpty (SiteAssigned::Name) or IsEmpty (SalaryCurrent) or CheckOutStatus not "Hired"]
	Exit Script [ Text Result: "Failed Send: Missing at least one of these fields: PositionType, SiteAssigned, SalaryCurrent, or not valid CheckOutStatus"]
End If

Set Variable [$email ; Value: Email1]
Set Variable [$name ; Value: NameFirstLast_c]
Set Variable [$PositionType ; Value: PositionType]
Set Variable [$templateId ; Value: {TEMPLATEID_HERE}]	
Set Variable [$status_I9 ; Value: StatusI9_c ]
Set Variable [$status_LiveScan ; Value: StatusLiveScan_c ]
Set Variable [$TBTestDate; Value: TBTestDate ]
Set Variable [$YearOfLiveScan ; Value: YearOfLiveScan ]
Set Variable [$I9OnFile ; Value: I9OnFile ]
Set Variable [$status_TBTest ; Value: StatusTBTest_c ]
Set Variable [$site ; Value: SiteAssigned ]
Set Variable [$ID_Person_Staff ; Value: ID_Person_Staff ]
Set Variable [$SalaryCurrent; Value: SalaryCurrent ]
Set Variable [$SalaryWinter ; Value: SalaryWinter ]
Set Variable [$Fname ; Value: NameFirst ]
Set Variable [$Lname ; Value: NameLast ]
Set Variable [$ID_PayrollADP ; Value: ID_PayrollADP ]
Set Variable [$ExemptStatus ; Value: ExemptStatus_c ]
Set Variable [$AdditionalAmount ; Value: AdditionalCompensationAmount ]
Set Variable [$Allowances ; Value: DocusignAllowances ]

# Determine which template to send based on position
If [ $position = "Lead Teacher"]
	Set Variable [$templateID ; Value: {TEMPLATEID_LEAD_TEACHER}]
Else If [$position = " Volunteer" ]
	Set Variable [$templateID ; Value: {TEMPLATEID_VOLUNTEER}]
End If

# Create JSON object to populate Docusign tabs with Filemaker fields
Set Variable [$post_data ; Value: JSONSetElement ($$json ; 
["accountId" ; $accountID ; JSONString ];
["emailSubject" ; "Aim High Compliance Documents"; JSONString]; 
["templateId" ; $templateId ; JSONString];
["templateRoles[0]email"; $email ; JSONString];
["templateRoles[0]name"; $name ; JSONString];
["templateRoles[0]roleName"; "Staff" ; JSONString];
["templateRoles[0]tabs.textTabs[0]tabLabel"; "status_I9" ; JSONString];
["templateRoles[0]tabs.textTabs[0]value"; $status_I9 ; JSONString];
["templateRoles[0]tabs.textTabs[1]tabLabel"; "status_LiveScan" ; JSONString];
["templateRoles[0]tabs.textTabs[1]value"; $status_LiveScan ; JSONString];
...
["status"; "sent" ; JSONString]
)

Set Variable [$url ; Value: {YOUR_DOCUSIGN_ENDPOINT}/v2.1/accounts/{ACCOUNTID}/envelopes ]
Insert from URL [ Select ; With dialog: Off ; DocusignResult; $url; cURL options: "-X POST -H \"Authorization: Bearer " & $token & "\" -H \"Content-Type: application/json\"" & "-d @$post_data" ]

# Set envelopeID, envelopeStatus, DocusignEmailSent fields
Set Field [DocusignEnvelopeID ; JSONGetElement ( DocusignResult ; "envelopeId ")]
Set Field [DocusignEnvelopeStatus ; JSONGetElement (DocusignResult ; "status" )]
Set Field [DocusignEmailSent ; Get (CurrentDate)]

Set Field [DocusignResult ; DocusignEnvelopeStatus]
Exit Script [Text Result: $null]